[
    {
        "name": "C Programming",
        "id": 1,
        "review": 20.8,
        "duration": "3600 Min",
        "price": "$150",
        "img":"https://contentstatic.techgig.com/photo/90325682.cms",
        "intro": "C is a powerful general-purpose programming language. It can be used to develop software like operating systems, databases, compilers, and so on. C programming is an excellent language to learn to program for beginners.",
        "subtitle_1":"Variable",
        "variable": {"title_1":"C - Variables","details_1":"A variable is nothing but a name given to a storage area that our programs can manipulate. Each variable in C has a specific type, which determines the size and layout of the variable's memory; the range of values that can be stored within that memory; and the set of operations that can be applied to the variable.The name of a variable can be composed of letters, digits, and the underscore character. It must begin with either a letter or an underscore. Upper and lowercase letters are distinct because C is case-sensitive",
       "title_2":"Variable Definition in C","details_2":"A variable definition tells the compiler where and how much storage to create for the variable.",
       "title_3":"Variable Declaration in C","details_3":"A variable declaration provides assurance to the compiler that there exists a variable with the given type and name so that the compiler can proceed for further compilation without requiring the complete detail about the variable. A variable definition has its meaning at the time of compilation only, the compiler needs actual variable definition at the time of linking the program. A variable declaration is useful when you are using multiple files and you define your variable in one of the files which will be available at the time of linking of the program. You will use the keyword extern to declare a variable at any place. Though you can declare a variable multiple times in your C program, it can be defined only once in a file, a function, or a block of code."},
       "subtitle_2":"Loop",
        "loop": {"title_1":"C - Loops","details_1":"You may encounter situations, when a block of code needs to be executed several number of times. In general, statements are executed sequentially: The first statement in a function is executed first, followed by the second, and so on. Programming languages provide various control structures that allow for more complicated execution paths.",
       "title_2":"Loop Control Statements","details_2":"Loop control statements change execution from its normal sequence. When execution leaves a scope, all automatic objects that were created in that scope are destroyed.",
       "title_3":"The Infinite Loop","details_3":"A loop becomes an infinite loop if a condition never becomes false. The for loop is traditionally used for this purpose. Since none of the three expressions that form the 'for' loop are required, you can make an endless loop by leaving the conditional expression empty."},
       "subtitle_3":"Arrays",
        "array": {"title_1":"C - Arrays","details_1":"Arrays a kind of data structure that can store a fixed-size sequential collection of elements of the same type. An array is used to store a collection of data, but it is often more useful to think of an array as a collection of variables of the same type.Instead of declaring individual variables, such as number0, number1, ..., and number99, you declare one array variable such as numbers and use numbers[0], numbers[1], and ..., numbers[99] to represent individual variables. A specific element in an array is accessed by an index. All arrays consist of contiguous memory locations. The lowest address corresponds to the first element and the highest address to the last element.",
       "title_2":"Declaring Arrays","details_2":"To declare an array in C, a programmer specifies the type of the elements and the number of elements required by an array as follows − type arrayName [ arraySize ];",
       "title_3":"Accessing Array Elements","details_3":"An element is accessed by indexing the array name. This is done by placing the index of the element within square brackets after the name of the array. For example − double salary = balance[9];"},
       "subtitle_4":"Functions",
        "func": {"title_1":"C - Functions","details_1":"A function definition in C programming consists of a function header and a function body. Here are all the parts of a function − Return Type − A function may return a value. The return_type is the data type of the value the function returns. Some functions perform the desired operations without returning a value. In this case, the return_type is the keyword void. Function Name − This is the actual name of the function. The function name and the parameter list together constitute the function signature. Parameters − A parameter is like a placeholder. When a function is invoked, you pass a value to the parameter. This value is referred to as actual parameter or argument. The parameter list refers to the type, order, and number of the parameters of a function. Parameters are optional; that is, a function may contain no parameters. Function Body − The function body contains a collection of statements that define what the function does.",
       "title_2":"Function Declarations","details_2":"A function declaration tells the compiler about a function name and how to call the function. The actual body of the function can be defined separately. A function declaration has the following parts − return_type function_name( parameter list ); For the above defined function max(), the function declaration is as follows − int max(int num1, int num2); Parameter names are not important in function declaration only their type is required, so the following is also a valid declaration − int max(int, int); Function declaration is required when you define a function in one source file and you call that function in another file. In such case, you should declare the function at the top of the file calling the function.",
       "title_3":"Calling a Function","details_3":"While creating a C function, you give a definition of what the function has to do. To use a function, you will have to call that function to perform the defined task. When a program calls a function, the program control is transferred to the called function. A called function performs a defined task and when its return statement is executed or when its function-ending closing brace is reached, it returns the program control back to the main program. To call a function, you simply need to pass the required parameters along with the function name, and if the function returns a value, then you can store the returned value."},
       "subtitle_5":"Objects",
        "objects": {"title_1":"C - Objects","details_1":"Objects are the structural building blocks of a system. They form a cohesive unit of state (data) and services (behavior). Every object has a specification part (public) and an implementation part (private). In terms of C programming, an object is implemented as a set of data members packed in a struct, and a set of related operations. With multiple instances, the data for an object are replicated for each occurrence of the object.",
       "title_2":"Multiplicity of objects","details_2":"Objects have a multiplicity that determines whether they are implemented as a single object, an array, a list, a collection, or a map. You can modify the default implementation using the CG::Relation::Implementation property for the object.",
       "title_3":"Descriptions","details_3":"Text entered in the Description field of the Features window for an object is generated into a comment that appears in the specification file for the package that owns the object, not in the specification file for the object itself. The comment is generated immediately before the structure allocation for the object."}
    },
    {
        "name": "C++ Programming",
        "id": 2,
        "review": 7.8,
        "duration": "3800 Min",
        "price": "$100",
        "img":"https://img.youtube.com/vi/MhYECGUzdA4/hqdefault.jpg",
        "intro": "C is a powerful general-purpose programming language. It can be used to develop software like operating systems, databases, compilers, and so on. C++ programming is an excellent language to learn to program for beginners.",
        "subtitle_1":"Variable",
        "variable": {"title_1":"C++ - Variables","details_1":"A variable provides us with named storage that our programs can manipulate. Each variable in C++ has a specific type, which determines the size and layout of the variable's memory; the range of values that can be stored within that memory; and the set of operations that can be applied to the variable. The name of a variable can be composed of letters, digits, and the underscore character. It must begin with either a letter or an underscore. Upper and lowercase letters are distinct because C++ is case-sensitive −",
       "title_2":"Variable Definition in C++","details_2":"A variable name can only have alphabets, numbers, and the underscore _. A variable name cannot begin with a number.It is a preferred practice to begin variable names with a lowercase character. For example, name is preferable to Name. A variable name cannot be a keyword. For example, int is a keyword that is used to denote integers. A variable name can start with an underscore. However, it's not considered a good practice..",
       "title_3":"Variable Declaration in C++","details_3":"A variable declaration provides assurance to the compiler that there is one variable existing with the given type and name so that compiler proceed for further compilation without needing complete detail about the variable. A variable declaration has its meaning at the time of compilation only, compiler needs actual variable definition at the time of linking of the program. A variable declaration is useful when you are using multiple files and you define your variable in one of the files which will be available at the time of linking of the program. You will use extern keyword to declare a variable at any place. Though you can declare a variable multiple times in your C++ program, but it can be defined only once in a file, a function or a block of code."},
       "subtitle_2":"Loop",
        "loop": {"title_1":"C++ - Loops","details_1":"There may be a situation, when you need to execute a block of code several number of times. In general, statements are executed sequentially: The first statement in a function is executed first, followed by the second, and so on. Programming languages provide various control structures that allow for more complicated execution paths.",
       "title_2":"Loop Control Statements","details_2":"Loop control statements change execution from its normal sequence. When execution leaves a scope, all automatic objects that were created in that scope are destroyed.",
       "title_3":"The Infinite Loop","details_3":"A loop becomes an infinite loop if a condition never becomes false. The for loop is traditionally used for this purpose. Since none of the three expressions that form the 'for' loop are required, you can make an endless loop by leaving the conditional expression empty."},
       "subtitle_3":"Arrays",
        "array": {"title_1":"C++ - Arrays","details_1":"Arrays a kind of data structure that can store a fixed-size sequential collection of elements of the same type. An array is used to store a collection of data, but it is often more useful to think of an array as a collection of variables of the same type.Instead of declaring individual variables, such as number0, number1, ..., and number99, you declare one array variable such as numbers and use numbers[0], numbers[1], and ..., numbers[99] to represent individual variables. A specific element in an array is accessed by an index. All arrays consist of contiguous memory locations. The lowest address corresponds to the first element and the highest address to the last element.",
       "title_2":"Declaring Arrays","details_2":"To declare an array in C++, a programmer specifies the type of the elements and the number of elements required by an array as follows − type arrayName [ arraySize ];",
       "title_3":"Accessing Array Elements","details_3":"An element is accessed by indexing the array name. This is done by placing the index of the element within square brackets after the name of the array. For example − double salary = balance[9];"},
       "subtitle_4":"Functions",
        "func": {"title_1":"C++ - Functions","details_1":"A function definition in C++ programming consists of a function header and a function body. Here are all the parts of a function − Return Type − A function may return a value. The return_type is the data type of the value the function returns. Some functions perform the desired operations without returning a value. In this case, the return_type is the keyword void. Function Name − This is the actual name of the function. The function name and the parameter list together constitute the function signature. Parameters − A parameter is like a placeholder. When a function is invoked, you pass a value to the parameter. This value is referred to as actual parameter or argument. The parameter list refers to the type, order, and number of the parameters of a function. Parameters are optional; that is, a function may contain no parameters. Function Body − The function body contains a collection of statements that define what the function does.",
       "title_2":"Function Declarations","details_2":"A function declaration tells the compiler about a function name and how to call the function. The actual body of the function can be defined separately. A function declaration has the following parts − return_type function_name( parameter list ); For the above defined function max(), the function declaration is as follows − int max(int num1, int num2); Parameter names are not important in function declaration only their type is required, so the following is also a valid declaration − int max(int, int); Function declaration is required when you define a function in one source file and you call that function in another file. In such case, you should declare the function at the top of the file calling the function.",
       "title_3":"Calling a Function","details_3":"While creating a C++ function, you give a definition of what the function has to do. To use a function, you will have to call that function to perform the defined task. When a program calls a function, the program control is transferred to the called function. A called function performs a defined task and when its return statement is executed or when its function-ending closing brace is reached, it returns the program control back to the main program. To call a function, you simply need to pass the required parameters along with the function name, and if the function returns a value, then you can store the returned value."},
       "subtitle_5":"Objects",
        "objects": {"title_1":"C++ - Objects","details_1":"Objects are the structural building blocks of a system. They form a cohesive unit of state (data) and services (behavior). Every object has a specification part (public) and an implementation part (private). In terms of C++ programming, an object is implemented as a set of data members packed in a struct, and a set of related operations. With multiple instances, the data for an object are replicated for each occurrence of the object.",
       "title_2":"Multiplicity of objects","details_2":"Objects have a multiplicity that determines whether they are implemented as a single object, an array, a list, a collection, or a map. You can modify the default implementation using the CG::Relation::Implementation property for the object.",
       "title_3":"Descriptions","details_3":"Text entered in the Description field of the Features window for an object is generated into a comment that appears in the specification file for the package that owns the object, not in the specification file for the object itself. The comment is generated immediately before the structure allocation for the object."}
    },
    {
        "name": "C# Programming",
        "id": 3,
        "review": 2.6,
        "duration": "3200 Min",
        "price": "$99",
        "img":"https://www.kindpng.com/picc/m/608-6084179_transparent-c-programming-png-c-sharp-logo-png.png",
        "intro": "C# is pronounced as C-Sharp. It is an object-oriented programming language provided by Microsoft that runs on .Net Framework.",
        "subtitle_1":"Variable",
        "variable": {"title_1":"C# - Variables","details_1":"A variable provides us with named storage that our programs can manipulate. Each variable in C# has a specific type, which determines the size and layout of the variable's memory; the range of values that can be stored within that memory; and the set of operations that can be applied to the variable. The name of a variable can be composed of letters, digits, and the underscore character. It must begin with either a letter or an underscore. Upper and lowercase letters are distinct because C# is case-sensitive −",
       "title_2":"Variable Definition in C#","details_2":"A variable name can only have alphabets, numbers, and the underscore _. A variable name cannot begin with a number.It is a preferred practice to begin variable names with a lowercase character. For example, name is preferable to Name. A variable name cannot be a keyword. For example, int is a keyword that is used to denote integers. A variable name can start with an underscore. However, it's not considered a good practice..",
       "title_3":"Variable Declaration in C#","details_3":"A variable declaration provides assurance to the compiler that there is one variable existing with the given type and name so that compiler proceed for further compilation without needing complete detail about the variable. A variable declaration has its meaning at the time of compilation only, compiler needs actual variable definition at the time of linking of the program. A variable declaration is useful when you are using multiple files and you define your variable in one of the files which will be available at the time of linking of the program. You will use extern keyword to declare a variable at any place. Though you can declare a variable multiple times in your C# program, but it can be defined only once in a file, a function or a block of code."},
       "subtitle_2":"Loop",
        "loop": {"title_1":"C# - Loops","details_1":"There may be a situation, when you need to execute a block of code several number of times. In general, statements are executed sequentially: The first statement in a function is executed first, followed by the second, and so on. Programming languages provide various control structures that allow for more complicated execution paths.",
       "title_2":"Loop Control Statements","details_2":"Loop control statements change execution from its normal sequence. When execution leaves a scope, all automatic objects that were created in that scope are destroyed.",
       "title_3":"The Infinite Loop","details_3":"A loop becomes an infinite loop if a condition never becomes false. The for loop is traditionally used for this purpose. Since none of the three expressions that form the 'for' loop are required, you can make an endless loop by leaving the conditional expression empty."},
       "subtitle_3":"Arrays",
        "array": {"title_1":"C# - Arrays","details_1":"Arrays a kind of data structure that can store a fixed-size sequential collection of elements of the same type. An array is used to store a collection of data, but it is often more useful to think of an array as a collection of variables of the same type.Instead of declaring individual variables, such as number0, number1, ..., and number99, you declare one array variable such as numbers and use numbers[0], numbers[1], and ..., numbers[99] to represent individual variables. A specific element in an array is accessed by an index. All arrays consist of contiguous memory locations. The lowest address corresponds to the first element and the highest address to the last element.",
       "title_2":"Declaring Arrays","details_2":"To declare an array in C#, a programmer specifies the type of the elements and the number of elements required by an array as follows − type arrayName [ arraySize ];",
       "title_3":"Accessing Array Elements","details_3":"An element is accessed by indexing the array name. This is done by placing the index of the element within square brackets after the name of the array. For example − double salary = balance[9];"},
       "subtitle_4":"Functions",
        "func": {"title_1":"C# - Functions","details_1":"A function definition in C# programming consists of a function header and a function body. Here are all the parts of a function − Return Type − A function may return a value. The return_type is the data type of the value the function returns. Some functions perform the desired operations without returning a value. In this case, the return_type is the keyword void. Function Name − This is the actual name of the function. The function name and the parameter list together constitute the function signature. Parameters − A parameter is like a placeholder. When a function is invoked, you pass a value to the parameter. This value is referred to as actual parameter or argument. The parameter list refers to the type, order, and number of the parameters of a function. Parameters are optional; that is, a function may contain no parameters. Function Body − The function body contains a collection of statements that define what the function does.",
       "title_2":"Function Declarations","details_2":"A function declaration tells the compiler about a function name and how to call the function. The actual body of the function can be defined separately. A function declaration has the following parts − return_type function_name( parameter list ); For the above defined function max(), the function declaration is as follows − int max(int num1, int num2); Parameter names are not important in function declaration only their type is required, so the following is also a valid declaration − int max(int, int); Function declaration is required when you define a function in one source file and you call that function in another file. In such case, you should declare the function at the top of the file calling the function.",
       "title_3":"Calling a Function","details_3":"While creating a C# function, you give a definition of what the function has to do. To use a function, you will have to call that function to perform the defined task. When a program calls a function, the program control is transferred to the called function. A called function performs a defined task and when its return statement is executed or when its function-ending closing brace is reached, it returns the program control back to the main program. To call a function, you simply need to pass the required parameters along with the function name, and if the function returns a value, then you can store the returned value."},
       "subtitle_5":"Objects",
        "objects": {"title_1":"C# - Objects","details_1":"Objects are the structural building blocks of a system. They form a cohesive unit of state (data) and services (behavior). Every object has a specification part (public) and an implementation part (private). In terms of C# programming, an object is implemented as a set of data members packed in a struct, and a set of related operations. With multiple instances, the data for an object are replicated for each occurrence of the object.",
       "title_2":"Multiplicity of objects","details_2":"Objects have a multiplicity that determines whether they are implemented as a single object, an array, a list, a collection, or a map. You can modify the default implementation using the CG::Relation::Implementation property for the object.",
       "title_3":"Descriptions","details_3":"Text entered in the Description field of the Features window for an object is generated into a comment that appears in the specification file for the package that owns the object, not in the specification file for the object itself. The comment is generated immediately before the structure allocation for the object."}
    },
    {
        "name": "Java Programming",
        "id": 4,
        "review": 4.9,
        "duration": "4500 Min",
        "price": "$110",
        "img":"https://5.imimg.com/data5/QQ/CT/AO/GLADMIN-25397883/selection-064-500x500.png",
        "intro": "Java is a popular programming language. Java is used to develop mobile apps, web apps, desktop apps, games and much more.",
        "subtitle_1":"Variable",
        "variable": {"title_1":"Java - Variables","details_1":"A variable provides us with named storage that our programs can manipulate. Each variable in Java has a specific type, which determines the size and layout of the variable's memory; the range of values that can be stored within that memory; and the set of operations that can be applied to the variable. The name of a variable can be composed of letters, digits, and the underscore character. It must begin with either a letter or an underscore. Upper and lowercase letters are distinct because Java is case-sensitive −",
       "title_2":"Variable Definition in Java","details_2":"A variable name can only have alphabets, numbers, and the underscore _. A variable name cannot begin with a number.It is a preferred practice to begin variable names with a lowercase character. For example, name is preferable to Name. A variable name cannot be a keyword. For example, int is a keyword that is used to denote integers. A variable name can start with an underscore. However, it's not considered a good practice..",
       "title_3":"Variable Declaration in Java","details_3":"A variable declaration provides assurance to the compiler that there is one variable existing with the given type and name so that compiler proceed for further compilation without needing complete detail about the variable. A variable declaration has its meaning at the time of compilation only, compiler needs actual variable definition at the time of linking of the program. A variable declaration is useful when you are using multiple files and you define your variable in one of the files which will be available at the time of linking of the program. You will use extern keyword to declare a variable at any place. Though you can declare a variable multiple times in your Java program, but it can be defined only once in a file, a function or a block of code."},
       "subtitle_2":"Loop",
        "loop": {"title_1":"Java - Loops","details_1":"There may be a situation, when you need to execute a block of code several number of times. In general, statements are executed sequentially: The first statement in a function is executed first, followed by the second, and so on. Programming languages provide various control structures that allow for more complicated execution paths.",
       "title_2":"Loop Control Statements","details_2":"Loop control statements change execution from its normal sequence. When execution leaves a scope, all automatic objects that were created in that scope are destroyed.",
       "title_3":"The Infinite Loop","details_3":"A loop becomes an infinite loop if a condition never becomes false. The for loop is traditionally used for this purpose. Since none of the three expressions that form the 'for' loop are required, you can make an endless loop by leaving the conditional expression empty."},
       "subtitle_3":"Arrays",
        "array": {"title_1":"Java - Arrays","details_1":"Arrays a kind of data structure that can store a fixed-size sequential collection of elements of the same type. An array is used to store a collection of data, but it is often more useful to think of an array as a collection of variables of the same type.Instead of declaring individual variables, such as number0, number1, ..., and number99, you declare one array variable such as numbers and use numbers[0], numbers[1], and ..., numbers[99] to represent individual variables. A specific element in an array is accessed by an index. All arrays consist of contiguous memory locations. The lowest address corresponds to the first element and the highest address to the last element.",
       "title_2":"Declaring Arrays","details_2":"To declare an array in Java, a programmer specifies the type of the elements and the number of elements required by an array as follows − type arrayName [ arraySize ];",
       "title_3":"Accessing Array Elements","details_3":"An element is accessed by indexing the array name. This is done by placing the index of the element within square brackets after the name of the array. For example − double salary = balance[9];"},
       "subtitle_4":"Functions",
        "func": {"title_1":"Java - Functions","details_1":"A function definition in Java programming consists of a function header and a function body. Here are all the parts of a function − Return Type − A function may return a value. The return_type is the data type of the value the function returns. Some functions perform the desired operations without returning a value. In this case, the return_type is the keyword void. Function Name − This is the actual name of the function. The function name and the parameter list together constitute the function signature. Parameters − A parameter is like a placeholder. When a function is invoked, you pass a value to the parameter. This value is referred to as actual parameter or argument. The parameter list refers to the type, order, and number of the parameters of a function. Parameters are optional; that is, a function may contain no parameters. Function Body − The function body contains a collection of statements that define what the function does.",
       "title_2":"Function Declarations","details_2":"A function declaration tells the compiler about a function name and how to call the function. The actual body of the function can be defined separately. A function declaration has the following parts − return_type function_name( parameter list ); For the above defined function max(), the function declaration is as follows − int max(int num1, int num2); Parameter names are not important in function declaration only their type is required, so the following is also a valid declaration − int max(int, int); Function declaration is required when you define a function in one source file and you call that function in another file. In such case, you should declare the function at the top of the file calling the function.",
       "title_3":"Calling a Function","details_3":"While creating a Java function, you give a definition of what the function has to do. To use a function, you will have to call that function to perform the defined task. When a program calls a function, the program control is transferred to the called function. A called function performs a defined task and when its return statement is executed or when its function-ending closing brace is reached, it returns the program control back to the main program. To call a function, you simply need to pass the required parameters along with the function name, and if the function returns a value, then you can store the returned value."},
       "subtitle_5":"Objects",
        "objects": {"title_1":"Java - Objects","details_1":"Objects are the structural building blocks of a system. They form a cohesive unit of state (data) and services (behavior). Every object has a specification part (public) and an implementation part (private). In terms of Java programming, an object is implemented as a set of data members packed in a struct, and a set of related operations. With multiple instances, the data for an object are replicated for each occurrence of the object.",
       "title_2":"Multiplicity of objects","details_2":"Objects have a multiplicity that determines whether they are implemented as a single object, an array, a list, a collection, or a map. You can modify the default implementation using the CG::Relation::Implementation property for the object.",
       "title_3":"Descriptions","details_3":"Text entered in the Description field of the Features window for an object is generated into a comment that appears in the specification file for the package that owns the object, not in the specification file for the object itself. The comment is generated immediately before the structure allocation for the object."}
    },
    {
        "name": "Python Programming",
        "id": 5,
        "review": 55.3,
        "duration": "2100 Min",
        "price": "$130",
        "img":"https://images.ctfassets.net/mrop88jh71hl/55rrbZfwMaURHZKAUc5oOW/9e5fe805eb03135b82e962e92169ce6d/python-programming-language.png",
        "intro": "Python is a popular general-purpose programming language. It is used in machine learning, web development, desktop applications, and many other fields.",
           "subtitle_1":"Variable",
        "variable": {"title_1":"Python - Variables","details_1":"A variable provides us with named storage that our programs can manipulate. Each variable in Python has a specific type, which determines the size and layout of the variable's memory; the range of values that can be stored within that memory; and the set of operations that can be applied to the variable. The name of a variable can be composed of letters, digits, and the underscore character. It must begin with either a letter or an underscore. Upper and lowercase letters are distinct because Python is case-sensitive −",
       "title_2":"Variable Definition in Python","details_2":"A variable name can only have alphabets, numbers, and the underscore _. A variable name cannot begin with a number.It is a preferred practice to begin variable names with a lowercase character. For example, name is preferable to Name. A variable name cannot be a keyword. For example, int is a keyword that is used to denote integers. A variable name can start with an underscore. However, it's not considered a good practice..",
       "title_3":"Variable Declaration in Python","details_3":"A variable declaration provides assurance to the compiler that there is one variable existing with the given type and name so that compiler proceed for further compilation without needing complete detail about the variable. A variable declaration has its meaning at the time of compilation only, compiler needs actual variable definition at the time of linking of the program. A variable declaration is useful when you are using multiple files and you define your variable in one of the files which will be available at the time of linking of the program. You will use extern keyword to declare a variable at any place. Though you can declare a variable multiple times in your Python program, but it can be defined only once in a file, a function or a block of code."},
       "subtitle_2":"Loop",
        "loop": {"title_1":"Python - Loops","details_1":"There may be a situation, when you need to execute a block of code several number of times. In general, statements are executed sequentially: The first statement in a function is executed first, followed by the second, and so on. Programming languages provide various control structures that allow for more complicated execution paths.",
       "title_2":"Loop Control Statements","details_2":"Loop control statements change execution from its normal sequence. When execution leaves a scope, all automatic objects that were created in that scope are destroyed.",
       "title_3":"The Infinite Loop","details_3":"A loop becomes an infinite loop if a condition never becomes false. The for loop is traditionally used for this purpose. Since none of the three expressions that form the 'for' loop are required, you can make an endless loop by leaving the conditional expression empty."},
       "subtitle_3":"Arrays",
        "array": {"title_1":"Python - Arrays","details_1":"Arrays a kind of data structure that can store a fixed-size sequential collection of elements of the same type. An array is used to store a collection of data, but it is often more useful to think of an array as a collection of variables of the same type.Instead of declaring individual variables, such as number0, number1, ..., and number99, you declare one array variable such as numbers and use numbers[0], numbers[1], and ..., numbers[99] to represent individual variables. A specific element in an array is accessed by an index. All arrays consist of contiguous memory locations. The lowest address corresponds to the first element and the highest address to the last element.",
       "title_2":"Declaring Arrays","details_2":"To declare an array in Python, a programmer specifies the type of the elements and the number of elements required by an array as follows − type arrayName [ arraySize ];",
       "title_3":"Accessing Array Elements","details_3":"An element is accessed by indexing the array name. This is done by placing the index of the element within square brackets after the name of the array. For example − double salary = balance[9];"},
       "subtitle_4":"Functions",
        "func": {"title_1":"Python - Functions","details_1":"A function definition in Python programming consists of a function header and a function body. Here are all the parts of a function − Return Type − A function may return a value. The return_type is the data type of the value the function returns. Some functions perform the desired operations without returning a value. In this case, the return_type is the keyword void. Function Name − This is the actual name of the function. The function name and the parameter list together constitute the function signature. Parameters − A parameter is like a placeholder. When a function is invoked, you pass a value to the parameter. This value is referred to as actual parameter or argument. The parameter list refers to the type, order, and number of the parameters of a function. Parameters are optional; that is, a function may contain no parameters. Function Body − The function body contains a collection of statements that define what the function does.",
       "title_2":"Function Declarations","details_2":"A function declaration tells the compiler about a function name and how to call the function. The actual body of the function can be defined separately. A function declaration has the following parts − return_type function_name( parameter list ); For the above defined function max(), the function declaration is as follows − int max(int num1, int num2); Parameter names are not important in function declaration only their type is required, so the following is also a valid declaration − int max(int, int); Function declaration is required when you define a function in one source file and you call that function in another file. In such case, you should declare the function at the top of the file calling the function.",
       "title_3":"Calling a Function","details_3":"While creating a Python function, you give a definition of what the function has to do. To use a function, you will have to call that function to perform the defined task. When a program calls a function, the program control is transferred to the called function. A called function performs a defined task and when its return statement is executed or when its function-ending closing brace is reached, it returns the program control back to the main program. To call a function, you simply need to pass the required parameters along with the function name, and if the function returns a value, then you can store the returned value."},
       "subtitle_5":"Objects",
        "objects": {"title_1":"Python - Objects","details_1":"Objects are the structural building blocks of a system. They form a cohesive unit of state (data) and services (behavior). Every object has a specification part (public) and an implementation part (private). In terms of Python programming, an object is implemented as a set of data members packed in a struct, and a set of related operations. With multiple instances, the data for an object are replicated for each occurrence of the object.",
       "title_2":"Multiplicity of objects","details_2":"Objects have a multiplicity that determines whether they are implemented as a single object, an array, a list, a collection, or a map. You can modify the default implementation using the CG::Relation::Implementation property for the object.",
       "title_3":"Descriptions","details_3":"Text entered in the Description field of the Features window for an object is generated into a comment that appears in the specification file for the package that owns the object, not in the specification file for the object itself. The comment is generated immediately before the structure allocation for the object."}
    },
    {
        "name": "PhP Programming",
        "id": 6,
        "review": 6.9,
        "duration": "2600 Min",
        "price": "$120",
        "img":"https://contentstatic.techgig.com/photo/msid-81637605,width-400,resizemode-4/Pros-and-cons-of-PHP-programming-language-that-every-developer-must-know.jpg",
        "intro": "PHP is an acronym for PHP: Hypertext Preprocessor · PHP is a widely-used, open source scripting language · PHP scripts are executed on the server·",
           "subtitle_1":"Variable",
        "variable": {"title_1":"PHP - Variables","details_1":"A variable provides us with named storage that our programs can manipulate. Each variable in PHP has a specific type, which determines the size and layout of the variable's memory; the range of values that can be stored within that memory; and the set of operations that can be applied to the variable. The name of a variable can be composed of letters, digits, and the underscore character. It must begin with either a letter or an underscore. Upper and lowercase letters are distinct because PHP is case-sensitive −",
       "title_2":"Variable Definition in PHP","details_2":"A variable name can only have alphabets, numbers, and the underscore _. A variable name cannot begin with a number.It is a preferred practice to begin variable names with a lowercase character. For example, name is preferable to Name. A variable name cannot be a keyword. For example, int is a keyword that is used to denote integers. A variable name can start with an underscore. However, it's not considered a good practice..",
       "title_3":"Variable Declaration in PHP","details_3":"A variable declaration provides assurance to the compiler that there is one variable existing with the given type and name so that compiler proceed for further compilation without needing complete detail about the variable. A variable declaration has its meaning at the time of compilation only, compiler needs actual variable definition at the time of linking of the program. A variable declaration is useful when you are using multiple files and you define your variable in one of the files which will be available at the time of linking of the program. You will use extern keyword to declare a variable at any place. Though you can declare a variable multiple times in your PHP program, but it can be defined only once in a file, a function or a block of code."},
       "subtitle_2":"Loop",
        "loop": {"title_1":"PHP - Loops","details_1":"There may be a situation, when you need to execute a block of code several number of times. In general, statements are executed sequentially: The first statement in a function is executed first, followed by the second, and so on. Programming languages provide various control structures that allow for more complicated execution paths.",
       "title_2":"Loop Control Statements","details_2":"Loop control statements change execution from its normal sequence. When execution leaves a scope, all automatic objects that were created in that scope are destroyed.",
       "title_3":"The Infinite Loop","details_3":"A loop becomes an infinite loop if a condition never becomes false. The for loop is traditionally used for this purpose. Since none of the three expressions that form the 'for' loop are required, you can make an endless loop by leaving the conditional expression empty."},
       "subtitle_3":"Arrays",
        "array": {"title_1":"PHP - Arrays","details_1":"Arrays a kind of data structure that can store a fixed-size sequential collection of elements of the same type. An array is used to store a collection of data, but it is often more useful to think of an array as a collection of variables of the same type.Instead of declaring individual variables, such as number0, number1, ..., and number99, you declare one array variable such as numbers and use numbers[0], numbers[1], and ..., numbers[99] to represent individual variables. A specific element in an array is accessed by an index. All arrays consist of contiguous memory locations. The lowest address corresponds to the first element and the highest address to the last element.",
       "title_2":"Declaring Arrays","details_2":"To declare an array in PHP, a programmer specifies the type of the elements and the number of elements required by an array as follows − type arrayName [ arraySize ];",
       "title_3":"Accessing Array Elements","details_3":"An element is accessed by indexing the array name. This is done by placing the index of the element within square brackets after the name of the array. For example − double salary = balance[9];"},
       "subtitle_4":"Functions",
        "func": {"title_1":"PHP - Functions","details_1":"A function definition in PHP programming consists of a function header and a function body. Here are all the parts of a function − Return Type − A function may return a value. The return_type is the data type of the value the function returns. Some functions perform the desired operations without returning a value. In this case, the return_type is the keyword void. Function Name − This is the actual name of the function. The function name and the parameter list together constitute the function signature. Parameters − A parameter is like a placeholder. When a function is invoked, you pass a value to the parameter. This value is referred to as actual parameter or argument. The parameter list refers to the type, order, and number of the parameters of a function. Parameters are optional; that is, a function may contain no parameters. Function Body − The function body contains a collection of statements that define what the function does.",
       "title_2":"Function Declarations","details_2":"A function declaration tells the compiler about a function name and how to call the function. The actual body of the function can be defined separately. A function declaration has the following parts − return_type function_name( parameter list ); For the above defined function max(), the function declaration is as follows − int max(int num1, int num2); Parameter names are not important in function declaration only their type is required, so the following is also a valid declaration − int max(int, int); Function declaration is required when you define a function in one source file and you call that function in another file. In such case, you should declare the function at the top of the file calling the function.",
       "title_3":"Calling a Function","details_3":"While creating a PHP function, you give a definition of what the function has to do. To use a function, you will have to call that function to perform the defined task. When a program calls a function, the program control is transferred to the called function. A called function performs a defined task and when its return statement is executed or when its function-ending closing brace is reached, it returns the program control back to the main program. To call a function, you simply need to pass the required parameters along with the function name, and if the function returns a value, then you can store the returned value."},
       "subtitle_5":"Objects",
        "objects": {"title_1":"PHP - Objects","details_1":"Objects are the structural building blocks of a system. They form a cohesive unit of state (data) and services (behavior). Every object has a specification part (public) and an implementation part (private). In terms of PHP programming, an object is implemented as a set of data members packed in a struct, and a set of related operations. With multiple instances, the data for an object are replicated for each occurrence of the object.",
       "title_2":"Multiplicity of objects","details_2":"Objects have a multiplicity that determines whether they are implemented as a single object, an array, a list, a collection, or a map. You can modify the default implementation using the CG::Relation::Implementation property for the object.",
       "title_3":"Descriptions","details_3":"Text entered in the Description field of the Features window for an object is generated into a comment that appears in the specification file for the package that owns the object, not in the specification file for the object itself. The comment is generated immediately before the structure allocation for the object."}
    }
]